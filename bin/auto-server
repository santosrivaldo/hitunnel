#!/usr/bin/env node -r esm

import 'localenv';
import optimist from 'optimist';
import Debug from 'debug';
import CreateServer from '../auto-server';

const debug = Debug('localtunnel:auto');

const argv = optimist
    .usage('Usage: $0 --port [num]')
    .options('secure', {
        default: false,
        describe: 'use this flag to indicate proxy over https'
    })
    .options('port', {
        default: '3000',
        describe: 'listen on this port for outside requests'
    })
    .options('address', {
        default: '0.0.0.0',
        describe: 'IP address to bind to'
    })
    .options('domain', {
        describe: 'Base domain name (required when hosting from a subdomain)'
    })
    .options('max-sockets', {
        default: 10,
        describe: 'maximum number of tcp sockets per client'
    })
    .argv;

if (argv.help) {
    optimist.showHelp();
    process.exit();
}

const server = CreateServer({
    max_tcp_sockets: argv['max-sockets'],
    secure: argv.secure,
    domain: argv.domain,
});

server.listen(argv.port, argv.address, () => {
    debug('auto-server listening on port: %d', server.address().port);
});

process.on('SIGINT', () => process.exit());
process.on('SIGTERM', () => process.exit());

